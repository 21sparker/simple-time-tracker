<UserControl x:Class="TimeTracker.TaskPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TimeTracker"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="750" d:DesignWidth="750">
    <UserControl.Resources>
        <local:DateConverter x:Key="DateConverter" />
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="T" Command="{Binding FocusTaskToAdd}" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Margin="20" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="10 0 0 0">Task:</TextBlock>
            <TextBox Grid.Column="2" VerticalAlignment="Center" Margin="10 0 0 0" 
                     Text="{Binding TaskToAdd, UpdateSourceTrigger=PropertyChanged}"
                     local:FocusExtension.IsFocused="{Binding IsTaskToAddFocused}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding AddTaskCommand}"/>
                    <KeyBinding Key="Enter" Command="{Binding AddTaskCommand}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Column="3" Margin="10 0 0 0" Command="{Binding AddTaskCommand}">Add Task</Button>
        </Grid>
        <DataGrid Grid.Row="1" Margin="25 10" CanUserResizeColumns="False" ItemsSource="{Binding TaskViewModels}"
                  AutoGenerateColumns="False" CanUserAddRows="False">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MaterialDesignFlatButton}" ToolTip="Delete Task"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5"
                                    Command="{Binding Path=DataContext.DeleteTaskCommand,
                                              RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              CommandParameter="{Binding }">
                                <materialDesign:PackIcon Kind="Delete"
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Task" Width="*" Binding="{Binding Description}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                            <Setter Property="Padding" Value="30 10 10 10"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="Padding" Value="15 0 0 0"/>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Time" Width="250" IsReadOnly="True"
                                    Binding="{Binding SecondsTracked, Converter={StaticResource DateConverter}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <!--<Setter Property="HorizontalAlignment" Value="Center" />-->
                            <Setter Property="Padding" Value="30 10 10 10"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Width="40">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MaterialDesignIconButton}" ToolTip="Start Tracking"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5"
                                    Command="{
                                    Binding Path=DataContext.TrackTaskCommand,
                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding }"
                                    Height="30" Width="30">
                                <materialDesign:PackIcon Kind="Play" HorizontalAlignment="Center"
                                                         VerticalAlignment="Center"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="Transparent"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource
                                            {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="Transparent"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Height" Value="40"/>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>
